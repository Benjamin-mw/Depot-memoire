---
title: "CartInd"
output: html_document
date: "2023-04-10"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
install.packages("rpart")
install.packages("rpart.plot")
install.packages("CASdatasets", repos = "http://dutangc.perso.math.cnrs.fr/RRepository/", type="source")
install.packages("CASdatasets", repos = "http://dutangc.free.fr/pub/RRepos/", type="source")
install.packages("CASdatasets", repos = "http://cas.uqam.ca/pub/", type="source")

#library(CASdatasets)
install.packages("rpart")
install.packages("partykit")
library(rpart)
library(partykit)
install.packages("devtools")
devtools::install_github("dutangc/CASdatasets", subdir="pkg")
library(CASdatasets)


install.packages("xts")
install.packages("sp")
install.packages("zoo")
```
```{r}
library(rpart)
library(rpart.plot)
library(sp)
library(CASdatasets)
```

```{r}
data(freMPL5)

perm <- sample(nrow(freMPL5),80/100*nrow(freMPL5))
freMPL5.train <- freMPL5[perm,]
freMPL5.test <- freMPL5[-perm,]
```


```{r}
#Import jeu de données
data(freMPL5)

#Création d'une variable de sinistralité
freMPL5.train$Sinistres = freMPL5.train$ClaimInd/freMPL5.train$Exposure
#Ajustement type des variables
freMPL5.train$HasKmLimit <- factor(freMPL5.train$HasKmLimit)
freMPL5.train$RiskArea <- factor(freMPL5.train$RiskArea)
freMPL5.train$OutUseNb <- as.numeric(freMPL5.train$OutUseNb)
#Suppression des valeurs négatives
freMPL5.train <- subset(freMPL5.train, freMPL5.train$ClaimAmount >= 0)
#Segmentation des tranches d'âge
freMPL5.train$DrivAge_fact <- cut(freMPL5.train$DrivAge, c(20,25,30,35,40,45,50,58,65,120), include.lowest = TRUE)
#Découpage CSP
freMPL5.train$Categ = 0
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP50"] = 1
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP55"] = 2
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP60"] = 3
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP1"] = 4
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP42"] = 5
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP46"] = 6
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP48"] = 7
freMPL5.train$Categ[freMPL5.train$SocioCateg == "CSP66"] = 8
freMPL5.train$Categ = factor(freMPL5.train$Categ)
```



```{r}
data(freMPL5)

perm <- sample(nrow(freMPL5),80/100*nrow(freMPL5))
freMPL5.train <- freMPL5[perm,]
freMPL5.test <- freMPL5[-perm,]
```



```{r}
freMPL5.Tree.claim <- rpart(ClaimInd ~ MariStat+Categ+VehUsage+HasKmLimit+ClaimNbResp+ClaimNbNonResp+ClaimNbParking+ClaimNbFireTheft+ClaimNbWindscreen+OutUseNb+RiskArea+BonusMalus+DrivAge_fact, data=freMPL5.train, method="class", control=rpart.control(xval = 10, minbucket = 12,cp=0))
rpart.plot(freMPL5.Tree.claim)
  
```

```{r}
#On utilise plotcp pour afficher la courbe du taux d'erreur relatif en fonction des cp, on choisi un cp qui minimise ce taux d'erreur pour une taille correcte
plotcp(freMPL5.Tree.claim)
printcp(freMPL5.Tree.claim)
```

```{r}
#étape d'élagage de l'arbre avec un cp qui minimise le taux d'erreur relatif tout en donnant un arbre de taille correcte
freMPL5.Tree.prune.claim=prune(freMPL5.Tree.claim,cp=0.00036)
rpart.plot(freMPL5.Tree.prune.claim)
```

---
title: "cartpois"
output: html_document
date: "2023-04-20"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(rpart)
library(rpart.plot)
library(sp)
library(CASdatasets)
library(pROC)
library(ROCR)

```

```{r}
data(freMPL5)
#Création d'une variable de sinistralité
freMPL5$Sinistres = freMPL5$ClaimInd/freMPL5$Exposure
freMPL5$Sinistres2 = round(freMPL5$Sinistres)
#enlever les valeurs négatives
freMPL5 <- subset(freMPL5, freMPL5$ClaimAmount >= 0)
#passer en variables catégorielles
freMPL5$HasKmLimit <- factor(freMPL5$HasKmLimit)
freMPL5$RiskArea <- factor(freMPL5$RiskArea)
freMPL5$ClaimInd <- factor(freMPL5$ClaimInd)
#segmentation des tranches d'âge
freMPL5$DrivAge_fact <- cut(freMPL5$DrivAge, c(20,25,30,35,40,45,50,58,65,120), include.lowest = TRUE)
#Découpage CSP
freMPL5$Categ = 0
freMPL5$Categ[freMPL5$SocioCateg == "CSP50"] = 1
freMPL5$Categ[freMPL5$SocioCateg == "CSP55"] = 2
freMPL5$Categ[freMPL5$SocioCateg == "CSP60"] = 3
freMPL5$Categ[freMPL5$SocioCateg == "CSP1"] = 4
freMPL5$Categ[freMPL5$SocioCateg == "CSP42"] = 5
freMPL5$Categ[freMPL5$SocioCateg == "CSP46"] = 6
freMPL5$Categ[freMPL5$SocioCateg == "CSP48"] = 7
freMPL5$Categ[freMPL5$SocioCateg == "CSP66"] = 8
freMPL5$Categ = factor(freMPL5$Categ)



```

```{r, error = TRUE}
sin2 <- freMPL5[freMPL5$ClaimInd == 1,]
```

```{r}

set.seed(seed = 2023)
echantillon <- sample(c(TRUE, FALSE), nrow(sin2), replace=TRUE, prob=c(0.8,0.2))
freMPL5.trainsin12  <- sin2[echantillon, ]
freMPL5.testsin12   <- sin2[!echantillon, ]
```


```{r}
#pour le nombre de sinistre avec claimInd=1
freMPL5.Tree.sinpois <- rpart(Sinistres2 ~ MariStat+Categ+VehUsage+HasKmLimit+ClaimNbResp+ClaimNbNonResp+ClaimNbParking+ClaimNbFireTheft+ClaimNbWindscreen+OutUseNb+RiskArea+BonusMalus+DrivAge_fact, data=freMPL5.trainsin12, method="poisson", control=rpart.control(xval = 10, minbucket=1,maxdepth=10, cp=0))
rpart.plot(freMPL5.Tree.sinpois)

```

```{r}
#On utilise plotcp pour afficher la courbe du taux d'erreur relatif en fonction des cp, on choisi un cp qui minimise ce taux d'erreur pour une taille correcte
plotcp(freMPL5.Tree.sinpois)
printcp(freMPL5.Tree.sinpois)
```


```{r}
#pour le nombre de sinistre
#étape d'élagage de l'arbre avec un cp qui minimise le taux d'erreur relatif tout en donnant un arbre de taille correcte
freMPL5.Tree.prune.sinpois=prune(freMPL5.Tree.sinpois,cp=5.3559e-03 )
rpart.plot(freMPL5.Tree.prune.sinpois)
```
```{r}
predictionSinPoi <- predict(freMPL5.Tree.prune.sinpois, newdata=freMPL5.testsin12)
deviance_residuelle <- sum(dpois(freMPL5.testsin12$Sinistres2, lambda = predictionSinPoi, log = TRUE))

# afficher la déviance résiduelle de Poisson
deviance_residuelle
```
